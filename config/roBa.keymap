#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define NUM 4
#define SCROLL 5

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        imail: imail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp I &kp N4 &kp M &kp O &kp AT &kp I &kp C &kp L &kp O &kp U &kp D &kp DOT &kp C &kp O &kp M>;
            label = "IMAIL";
        };

        ps: ps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(I) &kp N4 &kp P &kp A &kp S &kp O &kp N2 &kp N9 &kp N9 &kp N1>;
            label = "PS";
        };

        waku2: waku2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp S &kp H &kp I &kp N &kp Y &kp A &kp UNDER &kp I &kp S &kp H &kp I &kp Z &kp A &kp K &kp I &kp AT &kp W &kp A &kp K &kp U &kp MINUS &kp N2 &kp DOT &kp C &kp O &kp M>;
            label = "WAKU2";
        };

        win_ps: win_ps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N9 &kp N0 &kp MINUS &kp LS(U) &kp LS(I) &kp LS(O) &kp LS(U) &kp LS(I) &kp LS(O)>;
            label = "WIN_PS";
        };

        change_mac: change_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0>;
            label = "CHANGE_MAC";
        };

        change_win: change_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 1>;
            label = "CHANGE_WIN";
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        layer_mouse: layer_mouse {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MOUSE";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E             &kp R        &kp T                                     &kp Y            &kp U  &kp I     &kp O               &kp P
&kp A             &kp S         &kp D             &kp F        &kp G      &none           &kp LA(SPACE)  &kp H            &kp J  &kp K     &kp L               &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V        &kp B      &mo 6           &kp LS(LA(K))  &kp N            &kp M  &mkp MB1  &layer_mouse 5 MB2  &mt RIGHT_SHIFT MINUS
&kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 2 SPACE  &lt 3 TAB  &lt 4 CAPS      &lt 4 CAPS     &lt 3 BACKSPACE                                       &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        windows_default {
            bindings = <
&kp Q             &kp W         &kp E             &kp R        &kp T                                      &kp Y            &kp U  &kp I     &kp O               &kp P
&kp A             &kp S         &kp D             &kp F        &kp G      &trans          &kp DELETE      &kp H            &kp J  &kp K     &kp L               &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V        &kp B      &mo 6           &kp BACKSPACE   &kp N            &kp M  &mkp MB1  &layer_mouse 5 MB2  &mt RIGHT_SHIFT MINUS
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_CONTROL  &lt 7 SPACE  &lt 8 TAB  &lt 9 CAPS      &lt 9 CAPSLOCK  &lt 8 BACKSPACE                                       &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOL {
            bindings = <
&kp PRCNT  &kp DLLR   &kp AMPS  &kp CARET  &kp SLASH                      &kp BACKSLASH  &kp LBRC          &kp RBRC           &kp LT            &kp GT
&kp AT     &kp HASH   &kp STAR  &kp PLUS   &kp EQUAL  &trans      &trans  &kp UNDER      &kp LPAR          &kp RPAR           &kp SEMICOLON     &kp COLON
&kp MINUS  &kp UNDER  &trans    &kp EXCL   &kp QMARK  &trans      &trans  &kp PIPE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&trans     &trans     &trans    &trans     &trans     &trans      &trans  &trans                                                                &kp LG(SLASH)
            >;
        };

        ARROW {
            bindings = <
&kp LG(SPACE)      &none  &none  &none   &none                                        &kp HOME      &none                &kp UP_ARROW    &kp END          &none
&kp LA(LS(SPACE))  &none  &none  &none   &none   &kp LC(LA(KP_NUMBER_0))      &trans  &kp PAGE_UP   &kp LEFT             &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN
&none              &none  &none  &none   &none   &trans                       &trans  &kp LS(LEFT)  &kp RS(RIGHT_ARROW)  &kp COMMA       &kp PERIOD       &none
&none              &none  &none  &trans  &trans  &trans                       &trans  &trans                                                              &none
            >;

            sensor-bindings = <&scroll_left_right>;
        };

        NUMS {
            bindings = <
&imail  &none  &kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)                      &kp N7        &kp N8        &kp N9        &kp PLUS    &kp EQUAL
&ps     &none  &none               &none             &none                &trans      &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0      &none
&none   &none  &none               &none             &none                &trans      &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp COMMA
&none   &none  &none               &trans            &trans               &trans      &trans  &trans                                                &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&none  &none  &none  &none  &none                           &change_mac   &change_win   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none  &trans      &none        &bt BT_SEL 0  &bt BT_SEL 1  &none         &none         &none
&none  &none  &none  &none  &none  &trans      &bootloader  &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &none  &none  &none       &none        &none                                                   &bt BT_CLR_ALL
            >;
        };

        windows_simbol {
            bindings = <
&kp PRCNT  &kp DLLR   &kp AMPS  &kp CARET  &kp SLASH                      &kp BACKSLASH  &kp LBRC          &kp RBRC           &kp LT            &kp GT
&kp AT     &kp HASH   &kp STAR  &kp PLUS   &kp EQUAL  &trans      &trans  &kp UNDER      &kp LPAR          &kp RPAR           &kp SEMICOLON     &kp COLON
&kp MINUS  &kp UNDER  &trans    &kp EXCL   &kp QMARK  &trans      &trans  &kp PIPE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&trans     &trans     &trans    &trans     &trans     &trans      &trans  &trans                                                                &kp LC(SLASH)
            >;
        };

        windows_arrow {
            bindings = <
&none          &none  &none  &none   &none                                        &kp HOME      &none                &kp UP_ARROW    &kp END          &none
&none          &none  &none  &none   &none   &kp LC(LA(KP_NUMBER_0))      &trans  &kp PAGE_UP   &kp LEFT             &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN
&kp RS(RG(Z))  &none  &none  &none   &none   &trans                       &trans  &kp LS(LEFT)  &kp RS(RIGHT_ARROW)  &kp COMMA       &kp PERIOD       &none
&none          &none  &none  &trans  &trans  &trans                       &trans  &trans                                                              &none
            >;

            sensor-bindings = <&scroll_left_right>;
        };

        windows_num {
            bindings = <
&waku2   &none  &kp LG(LEFT_ARROW)  &kp LG(UP_ARROW)  &kp LG(RIGHT_ARROW)                      &kp N7        &kp N8        &kp N9        &kp PLUS    &kp EQUAL
&win_ps  &none  &none               &none             &none                &trans      &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0      &none
&trans   &none  &none               &none             &none                &trans      &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp COMMA
&none    &none  &none               &trans            &trans               &trans      &trans  &trans                                                &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };
    };
};
